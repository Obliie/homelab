version: "3.7"

services:
  traefik-docker-proxy:
    image: wollomatic/socket-proxy:1
    command:
      - '-loglevel=info'
      - '-allowfrom=traefik'
      - '-listenip=0.0.0.0'
      - '-allowGET=/v1\..{1,2}/(version|containers/.*|events.*)'
      - '-shutdowngracetime=5'
      - '-watchdoginterval=600'
      - '-stoponwatchdog'
    restart: unless-stopped
    read_only: true
    mem_limit: 64M
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges
    user: 65534:${DOCKER_GID}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - docker-proxynet

  traefik:
    image: traefik:3.1.0
    restart: unless-stopped
    read_only: true
    mem_limit: 2G
    cpus: 0.75
    depends_on:
      - traefik-docker-proxy
    security_opt:
      - no-new-privileges:true
    volumes:
      - ./traefik/traefik.yaml:/etc/traefik/traefik.yaml:ro
      - ./traefik/dynamic/:/etc/traefik/dynamic/:ro
      - ./traefik/authusers.txt:/etc/traefik/authusers.txt:ro
      - ./traefik/acme/acme.json:/etc/traefik/acme.json
    user: "2000:2000"
    secrets:
      - source: CF_API_EMAIL
        target: /run/secrets/CF_API_EMAIL
      - source: CF_API_KEY
        target: /run/secrets/CF_API_KEY
      - source: TRAEFIK_SSL_CERT
        target: /etc/traefik/certs/traefik.crt
      - source: TRAEFIK_SSL_KEY
        target: /etc/traefik/certs/traefik.key
    environment:
      - CF_API_EMAIL_FILE=/run/secrets/CF_API_EMAIL
      - CF_API_KEY_FILE=/run/secrets/CF_API_KEY
    labels:
      - "traefik.enable=true"
      # 1. create router
      - "traefik.http.routers.traefik.rule=Host(`traefik.lan`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.tls.certresolver=cloudflare"
      - "traefik.http.routers.traefik.tls.domains[0].main=${DOMAIN}"
      - "traefik.http.routers.traefik.tls.domains[0].sans=*.${DOMAIN}"
      - "traefik.http.routers.traefik.middlewares=traefik-auth, chain-oauth@file, error-pages"
      # 2. create basic auth middleware
      - "traefik.http.middlewares.traefik-auth.basicauth.removeheader=true"
      - "traefik.http.middlewares.traefik-auth.basicauth.usersfile=/etc/traefik/authusers.txt"
    networks:
      - traefik-servicenet
      - docker-proxynet
    ports:
      - "${PROXY_HOST}:80:10080"
      - "${PROXY_HOST}:443:10443"